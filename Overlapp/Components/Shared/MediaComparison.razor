@namespace Overlapp.Components
<div class="container mb-3">
	

	<div class="row d-flex justify-content-around m-3" style="">
		@for(int i = 0; i < Data.Length; i++)
		{
			int ix = i;
			MediaContainer? item = Data[i];
			

			<div style="height:100%; width:30vw; height:20vh; max-height:300px; max-width:300px; border-width:3px; border-style:solid;" class="d-flex flex-column justify-content-center text-center p-2 position-relative">
				@if(item != null)
				{
					IMediaRecord? media = item.Media;

					<div style="height:80%;">
						@{
							string src = media == null ? "no-image-available.svg" : ImageConfiguration.MakeImage(media) ?? "no-image-available.svg";
							<img class="img-fluid" style="height:100%" src="@src" />
						}
					</div>
					<p style="height:20%; margin:0;" class="text-truncate">
						<small>@(media?.NameOrTitle)</small>
					</p>
					@* <button style="position:absolute; top:-5px; left:-15px; width:30px; height:30px;" class="rounded-circle bg-danger text-white border-0" @onclick="() => ItemRemoveClick.InvokeAsync(item)">X</button> *@
					<button class="btn btn-outline-danger" @onclick="() => ItemRemoveClick.InvokeAsync(item)">Remove</button>
				}
				else
				{
					<div class="d-flex justify-content-center align-items-center flex-column flex-grow-1" style="background:#efefef; height:100%;">
						<p class="fw-bold fs-1" style="color:#777">+</p>
						@* <button class="btn btn-primary mt-auto" @onclick="() => EmptySlotSelected.InvokeAsync(ix)">Add</button> *@
					</div>
				}
			</div>
		}
		@if (ResetClicked.HasDelegate)
		{
			<div class="d-flex mt-2 justify-content-center">
				<button class="btn btn-primary" @onclick="ResetClicked">Do another!</button>
			</div>
		}
	</div>
</div>


